输入一个整数（位数不超过9位）代表一个人民币值（单位为元），请转换成财务要求的大写中文格式。如23108元，转换后变成“贰万叁仟壹百零捌”元。为了简化输出，用小写英文字母a-j顺序代表大写数字0-9，
用S、B、Q、W、Y分别代表拾、百、仟、万、亿。于是23108元应被转换输出为“cWdQbBai”元。

输入格式：
输入在一行中给出一个不超过9位的非负整数。
输出格式：
在一行中输出转换后的结果。注意“零”的用法必须符合中文习惯。

输入样例1：
813227345
输出样例1：
iYbQdBcScWhQdBeSf

输入样例2：
6900
输出样例2：
gQjB

Code(gcc):

/*
用小写英文字母a-j顺序代表大写数字0-9，
用S、B、Q、W、Y分别代表拾、百、仟、万、亿。
于是23108元应被转换输出为“cWdQbBai”元。
*/
#include <stdio.h>
#include <string.h>
char dxx(char n)             //大小写转换
{
    char c;
    c='a'+(n-'0');
    return c;
}
int main(void)
{
    char a[10]={'\0'},c;
    int len, l,i,flag,w;
    flag=0;
    w=0;                            //万标记位
    scanf("%s",a);
//    printf("%s",a);               //没问题
    len=strlen(a);
    l=(len+3)/4;                    //输入到达亿位就是3，万就是2
    for(i=0;i<len;i++)
    {
        c=dxx(a[i]);
        if(a[i]<='9'&&a[i]>='1')
        {
//             printf("%c",c);
            if(flag==1)              //1~9前面有0要输出a
            {
                printf("a");
//                 printf("%c",c);
                flag=0;
            }
            if(i==0&&(len-i)%4==2&&a[i]=='1')   //开头是10万或者10或10亿
            {
                printf("S");
//                 printf("i=%d\n",i);
            }
            else                                //正常输出
            {
                printf("%c",c);
                if((len-i)%4==0)                //千
                {
                    printf("Q");
//                     printf("l=%d",l);
                }
                else if((len-i)%4==3)           //百
                {
                    printf("B");
                }
                else if((len-i)%4==2)           //十
                {
                    printf("S");
                }
            }
            if(len-i<=8&&len-i>=5)              //中间的只有万，要是允许比亿大的就要再整点
            {
                w=1;                            //意思是万位到千万位有非零数字
            }
        }
        if((len-i)%4==1)                        //中间是万，在非0数字输出后再输出万和亿
        {
            if(l==3)
            {
                printf("Y");
            }
            else if(l==2&&w==1)
            {
                printf("W");
            }
            l--;                            //
        }
        if(a[i]=='0')
        {
            flag=1;                         //意味着出现0，后面再输出要先输出a
//             printf("tt");
        }
    }
    if(len==1&&a[0]=='0')
    {
        printf("a");                        //只有一位0
    }
    return 0;
}
