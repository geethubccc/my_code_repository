本题的要求很简单，就是求N个数字的和。麻烦的是，这些数字是以有理数分子/分母的形式给出的，你输出的和也必须是有理数的形式。

输入格式：
输入第一行给出一个正整数N（≤100）。随后一行按格式a1/b1 a2/b2 ...给出N个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。

输出格式：
输出上述数字和的最简形式 —— 即将结果写成整数部分 分数部分，其中分数部分写成分子/分母，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。

输入样例1：
5
2/5 4/15 1/30 -2/60 8/3
输出样例1：
3 1/3

输入样例2：
2
4/3 2/3
输出样例2：
2

输入样例3：
3
1/3 -1/6 1/8
输出样例3：
7/24

Code(gcc):

#include <stdio.h>
int gcd(int a,int b)
{
    int t;
    a=abs(a);
    b=abs(b);
    while(1)
    {
        if(a>b)
        {
            a-=b;
        }
        else
        {
            b-=a;
        }
        if(a==0)
        {
            t=b;
            break;
        }
        else if(b==0)
        {
            t=a;
            break;
        }
    }
    return t;
}
int main(void)
{
    int a[101]={0},b[101]={0},n,i,pro,ad,g;
    ad=0;
    pro=1;
//     a[101]={0};
//     b[101]={0};
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d/%d",&a[i],&b[i]);
//         pro=pro*b[i]/gcd(pro,b[i]);
    }
    for(i=0;i<n;i++)
    {
        pro*=b[i];
        ad=pro/b[i]*a[i]+ad*b[i];
        g=gcd(ad,pro);
        ad=ad/g;
        pro=pro/g;
//         printf("ad=%d pro=%d\n",ad,pro);
//         g=gcd(ad,pro);
//         ad=ad/g;
//         pro=pro/g;
    }
//     g=gcd(ad,pro);
//     ad=ad/g;
//     pro=pro/g;
     if(abs(ad)>abs(pro))
    {
        if(pro==1)
        {
            printf("%d",ad);
        }
        else
        {
            printf("%d %d/%d",ad/pro,ad%pro,pro);
        }
    }
    else if(ad==0)
    {
        printf("0");
    }
    else if(abs(ad)==abs(pro))
    {
        printf("%d",ad/pro);
    }
    else
    {
        printf("%d/%d",ad,pro);
    }
    return 0;
}
