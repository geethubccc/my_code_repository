二分法求函数根的原理为：如果连续函数f(x)在区间[a,b]的两个端点取值异号，即f(a)f(b)<0，则它在这个区间内至少存在1个根r，即f(r)=0。

二分法的步骤为：

检查区间长度，如果小于给定阈值，则停止，输出区间中点(a+b)/2；否则
如果f(a)f(b)<0，则计算中点的值f((a+b)/2)；
如果f((a+b)/2)正好为0，则(a+b)/2就是要求的根；否则
如果f((a+b)/2)与f(a)同号，则说明根在区间[(a+b)/2,b]，令a=(a+b)/2，重复循环；
如果f((a+b)/2)与f(b)同号，则说明根在区间[a,(a+b)/2]，令b=(a+b)/2，重复循环。
本题目要求编写程序，计算给定3阶多项式f(x)=a3*x^3+a2*x^2+a1*x+a0在给定区间[a,b]内的根。

输入格式：
输入在第1行中顺序给出多项式的4个系数a ，在第2行中顺序给出区间端点a和b。题目保证多项式在给定区间内存在唯一单根。

输出格式：
在一行中输出该多项式在该区间内的根，精确到小数点后2位。

输入样例：
3 -1 -3 1
-0.5 0.5
输出样例：
0.33

Code(gcc):
#include <stdio.h>
//#include <math.h>
double a3,a2,a1,a0;
double f(double x)
{
	double f;
	//f=a3*pow(x,3)+a2*pow(x,2)+a1*pow(x,1)+a0;
	f=a3*x*x*x+a2*x*x+a1*x+a0;
  //  printf("a3=%d a2=%d a1=%d a0=%d f=%d ",a3,a2,a1,a0,f);
	return f;
//     printf("a3=%d a2=%d a1=%d a0=%d fx=%.2lf\n",a3,a2,a1,a0,f);
}
int main()
{
    double a,b,x;                                              
    scanf("%lf %lf %lf %lf",&a3,&a2,&a1,&a0);
    scanf("%lf %lf",&a,&b);
    //printf("a=%f b=%f b-a=%lf\n",a,b,b-a);
    
    while(b-a>=0.01)                        //(b-a)>0.01
    {
        x=(a+b)/2;
    //    printf("x=%lf\n",x);
    //    printf("111\n");
        //fx=f(x);
    //    printf("fx=%lf\n",fx);
    //    fa=f(a);
     //   fb=f(b);
        
        if(f(x)==0)
        {
            break;
        }
        else if(f(a)==0)
        {
            x=a;
            break;
        }
        else if(f(b)==0)
        {
            x=b;
            break;
        }
        else if(f(x)*f(a)>0)
        {
            a=x;
        }
        else
        {
            b=x;
        }
    }
    if (b - a < 0.01) {
        x = (a + b) / 2;				//这一步一定要有，因为在<0.01时的b和a已经换过了，但x还没换 
    }
    printf("%.2lf",x);                //此处是四舍五入，但我们需要直接去掉一位

    return 0;
}
