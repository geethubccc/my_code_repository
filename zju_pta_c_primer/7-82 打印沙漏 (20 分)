7-82 打印沙漏 (20 分)
本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印
*****
 ***
  *
 ***
*****
所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。
给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。

输入格式:
输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。
输出格式:
首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。

输入样例:
19 *
输出样例:
*****
 ***
  *
 ***
*****
2

Code(gcc):

#include <stdio.h>
int main(void)
{
    int n,sum,i,r,j;
    char ex;
    i=0;
    sum=1;
    scanf("%d %c",&n,&ex);
    if(n>1)
    {
        for(i=1;sum<n;i++)
        {
            sum+=2*(2*i+1);
//            printf("sum1=%d\n",sum);
        }
//        printf("i=%d",i);
        sum=sum-2*(2*i-1);
        r=n-sum;        //剩下的符号
        i--;            //此时i为:  行数/2+1
    }
    else if(n==1)
    {
        sum=1;
        i=1;
    }
    else
    {
        sum=0;
    }
//    printf("sum2=%d\n",sum);
    for(j=i;j>=1;j--)//i=3
    {
        int k;
        for(k=1;k<=i-j;k++)     //空格:i-j  *:2*j-1
        {
            printf(" ");
        }
        for(k=1;k<=2*j-1;k++)
        {
            printf("%c",ex);
        }
        printf("\n");
    }
    for(j=2;j<=i;j++)//i=3
    {
        int k;
        for(k=1;k<=i-j;k++)     //空格:i-j  *:2*j-1
        {
            printf(" ");
        }
        for(k=1;k<=2*j-1;k++)
        {
            printf("%c",ex);
        }
        printf("\n");
    }
    printf("%d",r);
        return 0;
}
